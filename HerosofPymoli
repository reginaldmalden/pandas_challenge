import pandas as pd
import numpy as np

#file to load
file_to_load_csv="C:/Users/regin/Documents/vu-nsh-data-pt-06-2020-u-c/02-Homework/04-Pandas/Instructions/HeroesOfPymoli/Resources/purchase_data.csv"

#read purchasing data file
purchase_data=pd.read_csv(file_to_load_csv)

#Calculate the number of unique players
player_demographics=purchase_data.loc[:,["Gender","SN","Age",]]
player_demographics=player_demographics.drop_duplicates()
num_players=player_demographics.count()[0]

#display total number
pd.DataFrame({"Total Players":[num_players]})

# Run Basic calculations
average_item_price=purchase_data["Price"].mean()
total_purchase_value=purchase_data["Price"].sum()
purchase_count=purchase_data["Price"].count()
item_count=len(purchase_data["Item ID"].unique())

#create a dataframe to hold results
summary_table=pd.DataFrame({"Number of Unique Items":item_count,
                           "Total Revenue":[total_purchase_value],
                           "Number of Purchases":[purchase_count],
                            "Average Price":[average_item_price]})

#minor data munging
summary_table=summary_table.round(2)
summary_table["Average Price"]=summary_table["Average Price"].map("${:,.2f}".format)
summary_table["Number of Purchases"]=summary_table["Number of Purchases"].map("{:,}".format)
summary_table["Total Revenue"]=summary_table ["Total Revenue"].map("${:,.2f}".format)
summary_table=summary_table.loc[:,["Number of Unique Items", "Average Price","Number of Purchases","Total Revenue"]]

#Calcuate by gender
gender_demographics_totals=player_demographics["Gender"].value_counts()
gender_demographics_percents=gender_demographics_totals/num_players*100
gender_demographics=pd.DataFrame({"Total Count":gender_demographics_totals,"Percentage of Players":gender_demographics_percents})

#Data Munging
gender_demographics=gender_demographics.round(2)
gender_demographics["Percentage of Players"]=gender_demographics["Percentage of Players"].map("{:,.2f}%".format)

gender_demographics

summary_table

#basic Calculations for purchases by gender
gender_purchase_total= purchase_data.groupby(["Gender"]).sum()["Price"].rename("Total Purchase Value")
gender_average=purchase_data.groupby(["Gender"]).mean()["Price"].rename("Average Purchase Price")
gender_counts=purchase_data.groupby(["Gender"]).count()["Price"].rename("Purchase Count")

#Calculate Normalized Purchasing
normalized_totals=gender_purchase_total/gender_demographics["Total Count"]

#Convert Data Frame
gender_data=pd.DataFrame({"Purchase Count":gender_counts, "Average Purchase Price":gender_average,"Total Purchase Value":gender_purchase_total,"Normalized Totals":normalized_totals})

#Data Munging
gender_data["Average Purchase Price"]=gender_data["Average Purchase Price"].map("${:,.2f}".format)
gender_data["Total Purchase Value"]=gender_data["Total Purchase Value"].map("${:,.2f}".format)
gender_data["Purchase Count"]= gender_data["Purchase Count"].map("{:,}".format)
gender_data["Normalized Totals"]=gender_data["Normalized Totals"].map("${:,.2f}%".format)
gender_data= gender_data.loc[:, ["Purchase Count", "Average Purchase Price","Total Purchase Value","Normalized Totals"]]

#Display Gender Totals
gender_data
#Run basic calculations for age demographics
age_bins=[0,9.90,14.90,19.90,24.90,29.90,34.90,39.90,99999]
group_names=["0-9","10-14","15-19","20-24","25-29","30-34","35-39","40+"]

#Categorize the existing playersusing the age bins
player_demographics["Age Ranges"]=pd.cut(player_demographics["Age"],age_bins, labels=group_names)

#calculate the numbers and the percentage by age group
age_demographics_totals=player_demographics["Age Ranges"].value_counts()
age_demographics_percents=age_demographics_totals/num_players*100
age_demographics=pd.DataFrame({"Total Count":age_demographics_totals,"Percentage of Players":age_demographics_percents})

#minor data munging
age_demographics=age_demographics.round(2)
age_demographics["Percentage of Players"]=age_demographics["Percentage of Players"].map("{:,.2f}%".format)

#Display Age Demographics table
age_demographics.sort_index()

#Bin the purchasing data
purchase_data["Age Ranges"]=pd.cut(purchase_data["Age"],age_bins,labels=group_names)

#Run basic calculation
age_purchase_total=purchase_data.groupby(["Age Ranges"]).sum()["Price"].rename("Total Purchase Value")
age_average=purchase_data.groupby(["Age Ranges"]).mean()["Price"].rename("Average Purchase Price")
age_counts=purchase_data.groupby(["Age Ranges"]).count()["Price"].rename("Purchase Count")

#Calculate the normaliszed purchases
normalized_total=age_purchase_total/age_demographics["Total Count"]

#Convert to Dataframe
age_data=pd.DataFrame({"Purchase Count":age_counts,"Average Purchase Price":age_average, "Total Purchase Value":age_purchase_total,"Normalized Totals":normalized_total})

#Minor Data Munging
age_data["Average Pirchase Price"]=age_data["Average Purchase Price"].map("${:,.2f}".format)
age_data["Total Purchase Value"]=age_data["Total Purchase Value"].map("${:,.2f}".format)
age_data["Purchase Count"]=age_data["Purchase Count"].map("${:,}".format)
age_data["Normalized Totals"]=age_data["Normalized Totals"].map("${:,.2f}".format)
age_data=age_data.loc[:,["Purchase Count","Average Purchase Price","Total Purchase Value","Normalized Totals"]]

#Display the age data
age_data

#Basic Calculations
user_total=purchase_data.groupby(["SN"]).sum()["Price"].rename("Total Purchase Value")
user_average=purchase_data.groupby(["SN"]).mean()["Price"].rename("Average Purchase Price")
user_count=purchase_data.groupby(["SN"]).count()["Price"].rename("Purchase Count")

#Convert to dataframe
user_data=pd.DataFrame({"Total Purchase Value":user_total,"Average Purchase Price":user_average, "Purchase Count":user_count})

#Minor Data Munging
user_data["Average Purchase Price"]=user_data["Average Purchase Price"].map("${:,.2f}".format)
user_data["Total Purchase Value"]=user_data["Total Purchase Value"].map("${:,.2f}".format)
user_data=user_data.loc[:,["Purchase Count","Average Purchase Price","Total Purchase Value"]]

#Display Table
user_data.sort_values("Total Purchase Value",ascending=False).head(5)

#Most Popular items

#Extract the item data
item_data=purchase_data.loc[:,["Item ID", "Item Name", "Price"]]

#Perform basic calculations
total_item_purchase=item_data.groupby(["Item ID","Item Name"]).sum()["Price"].rename("Total Purchase Values")
average_item_purchase=item_data.groupby(["Item ID","Item Name",]).mean()["Price"]
item_count=item_data.groupby(["Item ID","Item Name"]).count()["Price"].rename("Purchase Count")

#minor data munging
item_data_pd=pd.DataFrame({"Total Purchase Value":total_item_purchase,"Item Price":average_item_purchase,"Purchase Count":item_count})
item_data_pd["Item Price"]=item_data_pd["Item Price"].map("${:,.2f}".format)
item_data_pd["Purchase Count"]=item_data_pd["Purchase Count"].map("{:,}".format)
item_data_pd["Total Purchase Value"]=item_data_pd["Total Purchase Value"].map("${:,.2f}".format)
item_data_pd=item_data_pd.loc[:,["Purchase Count","Item Price","Total Purchase Value"]]

#Display the table
item_data_pd.sort_values("Purchase Count",ascending=False).head(5)

#Most Popular items

#Extract the item data
item_data=purchase_data.loc[:,["Item ID", "Item Name", "Price"]]

#Perform basic calculations
total_item_purchase=item_data.groupby(["Item ID","Item Name"]).sum()["Price"].rename("Total Purchase Values")
average_item_purchase=item_data.groupby(["Item ID","Item Name",]).mean()["Price"]
item_count=item_data.groupby(["Item ID","Item Name"]).count()["Price"].rename("Purchase Count")

#minor data munging
item_data_pd=pd.DataFrame({"Total Purchase Value":total_item_purchase,"Item Price":average_item_purchase,"Purchase Count":item_count})
item_data_pd["Item Price"]=item_data_pd["Item Price"].map("${:,.2f}".format)
item_data_pd["Purchase Count"]=item_data_pd["Purchase Count"].map("{:,}".format)

#Sort the values before formatting total
item_data_pd=item_data_pd.sort_values("Total Purchase Value",ascending=False)

item_data_pd["Total Purchase Value"]=item_data_pd ["Total Purchase Value"].map("${:,.2f}".format)
item_data_pd.head()
